{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy MongoDB on a New VPC in AWS",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "NumberOfAZs",
                        "VPCCIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "PrivateSubnet3CIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "PublicSubnet3CIDR",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Security Configuration"
                    },
                    "Parameters": [
                        "KeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "Linux Bastion Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "BastionAMIOS",
                        "BastionInstanceType",
						"NumBastionHosts"
                    ]
                },
                {
                    "Label": {
                        "default": "MongoDB Database Configuration"
                    },
                    "Parameters": [
						"ClusterReplicaSetCount",
						"Iops",
						"MongoDBVersion",
						"MongoDBAdminUsername",
						"MongoDBAdminPassword",
						"NodeInstanceType",
						"ReplicaShardIndex",
						"VolumeSize",
						"VolumeType"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
			"ParameterLabels": {
				"AvailabilityZones": {
					"default": "Availability Zones"
				},
				"BastionAMIOS": {
					"default": "Bastion AMI Operating System"
				},
				"BastionInstanceType": {
					"default": "Bastion Instance Type"
				},
				"ClusterReplicaSetCount": {
					"default": "Cluster Replica Set Count"
				},
				"Iops": {
					"default": "IOPS"
				},
				"KeyPairName": {
					"default": "Key Pair Name"
				},
				"NumBastionHosts": {
					"default": "Number of Bastion Hosts"
				},
				"MongoDBAdminPassword": {
					"default": "MongoDB Admin Password"
				},
				"MongoDBAdminUsername": {
					"default": "MongoDB Admin Username"
				},
				"MongoDBVersion": {
					"default": "MongoDB Version"
				},
				"NodeInstanceType": {
					"default": "Node Instance Type"
				},
				"NumberOfAZs": {
					"default": "Number of Availability Zones"
				},
				"PrivateSubnet1CIDR": {
					"default": "Private Subnet 1 CIDR"
				},
				"PrivateSubnet2CIDR": {
					"default": "Private Subnet 2 CIDR"
				},
				"PrivateSubnet3CIDR": {
					"default": "Private Subnet 3 CIDR"
				},
				"PublicSubnet1CIDR": {
					"default": "Public Subnet 1 CIDR"
				},
				"PublicSubnet2CIDR": {
					"default": "Public Subnet 2 CIDR"
				},
				"PublicSubnet3CIDR": {
					"default": "Public Subnet 3 CIDR"
				},
				"QSS3BucketName": {
					"default": "Quick Start S3 Bucket Name"
				},
				"QSS3KeyPrefix": {
					"default": "Quick Start S3 Key Prefix"
				},
				"RemoteAccessCIDR": {
					"default": "Allowed Bastion External Access CIDR"
				},
				"ReplicaShardIndex": {
					"default": "Replica Shard Index"
				},
				"VolumeSize": {
					"default": "Volume Size"
				},
				"VolumeType": {
					"default": "Volume Type"
				},
				"VPCCIDR": {
					"default": "VPC CIDR"
				}
			}
        }
    },
    "Parameters": {
		"PrivateSubnet2CIDR": {
		    "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
		    "Default": "10.0.32.0/19",
		    "Type": "String",
		    "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
		    "Description": "CIDR block for private subnet 2 located in Availability Zone 2."
		},
  		"PrivateSubnet3CIDR": {
		    "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
		    "Default": "10.0.64.0/19",
		    "Type": "String",
		    "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
		    "Description": "CIDR block for private subnet 3 located in Availability Zone 3."
		},
		"QSS3BucketName": {
		    "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
		    "Default": "aws-quickstart",
		    "Type": "String",
		    "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
		    "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
		},
		"PublicSubnet2CIDR": {
		    "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
		    "Default": "10.0.144.0/20",
		    "Type": "String",
		    "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
		    "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2"
		},
  		"PublicSubnet3CIDR": {
		    "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
		    "Default": "10.0.160.0/20",
		    "Type": "String",
		    "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
		    "Description": "CIDR Block for the public DMZ subnet 3 located in Availability Zone 3"
		},
		"KeyPairName": {
		    "Type": "AWS::EC2::KeyPair::KeyName",
		    "Description": "Public/private key pairs allow you to securely connect to your instance after it launches"
		},
		"PublicSubnet1CIDR": {
		    "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
		    "Default": "10.0.128.0/20",
		    "Type": "String",
		    "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
		    "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1"
		},
		"BastionAMIOS": {
			"AllowedValues": [
				"Amazon-Linux-HVM",
				"CentOS-7-HVM",
				"Ubuntu-Server-14.04-LTS-HVM",
				"Ubuntu-Server-16.04-LTS-HVM"
			],
			"Default": "Amazon-Linux-HVM",
		    "Description": "The Linux distribution for the AMI to be used for the bastion instances",
			"Type": "String"
		},
		"RemoteAccessCIDR": {
		    "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
		    "Type": "String",
		    "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
		    "Description": "Allowed CIDR block for external SSH access to the bastions"
		},
		"PrivateSubnet1CIDR": {
		    "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
		    "Default": "10.0.0.0/19",
		    "Type": "String",
		    "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
		    "Description": "CIDR block for private subnet 1 located in Availability Zone 1."
		},
		"BastionInstanceType": {
		    "Default": "t2.micro",
		    "Type": "String",
		    "Description": "Amazon EC2 instance type for the second bastion instance",
		    "AllowedValues": [
		        "t2.nano",
		        "t2.micro",
		        "t2.small",
		        "t2.medium",
		        "t2.large",
		        "m3.large",
		        "m3.xlarge",
		        "m3.2xlarge",
		        "m4.large",
		        "m4.xlarge",
		        "m4.2xlarge",
		        "m4.4xlarge"
		    ]
		},
		"NumBastionHosts": {
			"AllowedValues": [
				"1",
				"2",
				"3",
				"4"
			],
			"Default": "1",
			"Description": "Enter the number of bastion hosts to create",
			"Type": "String"
		},
		"VPCCIDR": {
		    "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
		    "Default": "10.0.0.0/16",
		    "Type": "String",
		    "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
		    "Description": "CIDR Block for the VPC"
		},
		"QSS3KeyPrefix": {
		    "AllowedPattern": "^[0-9a-zA-Z-/]*$",
		    "Default": "quickstart-mongodb/",
		    "Type": "String",
		    "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
		    "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with a hyphen (-)."
		},
		"AvailabilityZones": {
		    "Type": "List<AWS::EC2::AvailabilityZone::Name>",
		    "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved. 1 or 3 AZs are used for this deployment."
		},
        "NumberOfAZs": {
            "AllowedValues": [
                "2",
                "3"
            ],
            "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
            "Type": "String"
        },
	    "NodeInstanceType": {
	        "Default": "m4.large",
	        "Type": "String",
	        "Description": "Amazon EC2 instance type for the MongoDB nodes.",
	        "AllowedValues": [
	            "m3.medium",
	            "m3.large",
	            "m3.xlarge",
	            "m3.2xlarge",
	            "m4.large",
	            "m4.xlarge",
	            "m4.2xlarge",
	            "m4.4xlarge",
	            "m4.10xlarge",
	            "c3.large",
	            "c3.xlarge",
	            "c3.2xlarge",
	            "c3.4xlarge",
	            "c3.8xlarge",
	            "r3.large",
	            "r3.xlarge",
	            "r3.2xlarge",
	            "r3.4xlarge",
	            "r3.8xlarge",
	            "i2.xlarge",
	            "i2.2xlarge",
	            "i2.4xlarge",
	            "i2.8xlarge"
	        ]
	    },
	    "VolumeSize": {
	        "Default": "400",
	        "Type": "String",
	        "Description": "EBS Volume Size (data) to be attached to node in GBs"
	    },
	    "VolumeType": {
	        "Default": "gp2",
	        "Type": "String",
	        "Description": "EBS Volume Type (data) to be attached to node in GBs [io1,gp2]",
	        "AllowedValues": [
	            "gp2",
	            "io1"
	        ]
	    },
	    "MongoDBVersion": {
	        "Default": "3.4",
	        "Type": "String",
	        "Description": "MongoDB version",
	        "AllowedValues": [
				"3.6",
	            "3.4",
                "3.2"
	        ]
	    },
		"MongoDBAdminUsername": {
			"Default": "admin",
			"NoEcho": "true",
			"Description": "MongoDB admin account username",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "16",
			"AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
			"ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
		},
		"MongoDBAdminPassword": {
			"AllowedPattern": "([A-Za-z0-9_@-]{8,32})",
			"ConstraintDescription": "Input your MongoDB database password, Min 8, Maximum of 32 characters.",
			"Description": "Enter your MongoDB Database Password, Min 8, maximum of 32 characters. Allowed characters are: [A-Za-z0-9_@-]",
			"NoEcho": "true",
			"Type": "String"
		},
	    "ClusterReplicaSetCount": {
	        "Default": "1",
	        "Type": "String",
	        "Description": "Number of Replica Set Members. Choose 1 or 3",
	        "AllowedValues": [
	            "1",
	            "3"
	        ]
	    },
		"ReplicaShardIndex": {
			"Description": "Shard Index of this replica set",
			"Type": "String",
			"Default": "0"
		},
	    "Iops": {
	        "Default": "100",
	        "Type": "String",
	        "Description": "Iops of EBS volume when io1 type is chosen. Otherwise ignored"
	    }
	},
    "Conditions": {
		"CreateThreeReplicaSet": {
			"Fn::Equals": [
				{
					"Ref": "ClusterReplicaSetCount"
				},
				"3"
			]
		},
        "RepeatSubnet": {
            "Fn::Equals": [
                {
                    "Ref": "NumberOfAZs"
                },
                "2"
            ]
        },
		"GovCloudCondition": {
			"Fn::Equals": [
				{
					"Ref": "AWS::Region"
				},
				"us-gov-west-1"
			]
		}
	},
    "Resources" : {
            "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
					"Fn::Sub": [
						"https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template",
						{
							"QSS3Region": {
								"Fn::If": [
									"GovCloudCondition",
									"s3-us-gov-west-1",
									"s3"
								]
							}
						}
					]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PrivateSubnet3ACIDR": {
                        "Ref": "PrivateSubnet3CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "PublicSubnet3CIDR": {
                        "Ref": "PublicSubnet3CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "NumBastionHosts": {
                        "Ref": "NumBastionHosts"
                    },
                    "BastionAMIOS": {
                        "Ref": "BastionAMIOS"
                    },
					"EnableTCPForwarding": "true",
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-linux-bastion/"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "MongoDBStack": {
            "DependsOn": "BastionStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
            	"TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/mongodb.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "BastionSecurityGroupID": {
                        "Fn::GetAtt": [
                            "BastionStack",
                            "Outputs.BastionSecurityGroupID"
                        ]
                    },
                    "ClusterReplicaSetCount": {
                        "Ref": "ClusterReplicaSetCount"
                    },
                    "Iops": {
                        "Ref": "Iops"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "MongoDBVersion": {
                        "Ref": "MongoDBVersion"
                    },
					"MongoDBAdminUsername": {
						"Ref": "MongoDBAdminUsername"
					},
					"MongoDBAdminPassword": {
						"Ref": "MongoDBAdminPassword"
					},
					"NodeInstanceType": {
                        "Ref": "NodeInstanceType"
                    },
                    "PrimaryNodeSubnet": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "Secondary0NodeSubnet": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "Secondary1NodeSubnet": {
                        "Fn::If": [
                            "RepeatSubnet",
                            {
                                "Fn::GetAtt": [
                                    "VPCStack",
                                    "Outputs.PrivateSubnet2AID"
                                ]
                            },
                            {
                                "Fn::GetAtt": [
                                    "VPCStack",
                                    "Outputs.PrivateSubnet3AID"
                                ]
                            }
                        ]
                    },
                    "ReplicaShardIndex": {
                        "Ref": "ReplicaShardIndex"
                    },
                    "VPC": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "VolumeSize": {
                        "Ref": "VolumeSize"
                    },
                    "VolumeType": {
                        "Ref": "VolumeType"
                    }
                }
            }
        }
    },
	"Outputs": {
		"PrimaryReplicaNodeIp": {
			"Value": {
				"Fn::GetAtt": [
					"MongoDBStack",
					"Outputs.PrimaryReplicaNodeIp"
				]
			},
			"Description": "Private IP Address of Primary Replica Node"
		},
		"SecondaryReplicaNode0Ip": {
			"Value": {
				"Fn::GetAtt": [
					"MongoDBStack",
					"Outputs.SecondaryReplicaNode0Ip"
				]
			},
			"Description": "Private IP Address of Secondary Replica 0 Node",
			"Condition" : "CreateThreeReplicaSet"
		},
		"SecondaryReplicaNode1Ip": {
			"Value": {
				"Fn::GetAtt": [
					"MongoDBStack",
					"Outputs.SecondaryReplicaNode1Ip"
				]
			},
			"Description": "Private IP Address of Secondary Replica 1 Node",
			"Condition" : "CreateThreeReplicaSet"
		},
		"MongoDBServerAccessSecurityGroup": {
			"Value": {
				"Fn::GetAtt": [
					"MongoDBStack",
					"Outputs.MongoDBServerAccessSecurityGroup"
				]
			},
			"Description": "MongoDB Access Security Group"
		}
	}
}
